import 'dart:typed_data';

import 'package:flutter/material.dart';
import 'package:image/image.dart' as imglib;
import 'package:file_picker/file_picker.dart';
import 'dart:io';

class PicFromDevice extends StatefulWidget {
  const PicFromDevice({Key? key}) : super(key: key);

  @override
  _PicFromDeviceState createState() => _PicFromDeviceState();
}

class _PicFromDeviceState extends State<PicFromDevice> {
  late List<Image> _images = <Image>[];
  void _selectPic() async {
    FilePickerResult? result = await FilePicker.platform.pickFiles(
      type: FileType.custom,
      allowedExtensions: <String>['jpg', 'png', 'webp'],
    );
    if (result != null) {
      File file = File(result.files.single.path!);
      /*Image inputImage = Image.file(file);
      setState(() {
        _images = splitImage(inputImage);
      });*/
    } else {
      // User canceled the picker
    }
  }

  /*List<Image> splitImage(Image inputImage) {
    //imglib.Image? image = inputImage as imglib.Image;
    Image image = inputImage;

    final int xLength = (image.width! / 4).round();
    final int yLength = (image.height! / 4).round();
    List<imglib.Image> pieceList = <imglib.Image>[];

    for (int y = 0; y < 4; y++) {
      for (int x = 0; x < 4; x++) {
        pieceList.add(imglib.copyCrop(image, x, y, x * xLength, y * yLength));
      }
    }

    //Convert image from image package to Image Widget to display

    List<Image> outputImageList = <Image>[];
    for (imglib.Image img in pieceList) {
      /*Uint8List uint8List;
      List<int> list = imglib.encodeJpg(img);
      uint8List = Uint8List.fromList(list);*/
      outputImageList.add(Image.memory(Uint8List.fromList(imglib.encodeJpg(img))));
      //outputImageList.add(Image.memory(imglib.encodeJpg(img)));
    }

    return outputImageList;
  }*/

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: <Widget>[
            TextButton(onPressed: () => _selectPic(), child: const Text('Select Image')),
            if (_images.isNotEmpty)
              Row(
                /*crossAxisCount: 4,
                mainAxisSpacing: 8.0,
                crossAxisSpacing: 8.0,*/
                children: _images.map((Image e) => e).toList(),
              ),
          ],
        ),
      ),
    );
  }
}
